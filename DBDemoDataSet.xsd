<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DBDemoDataSet" targetNamespace="http://tempuri.org/DBDemoDataSet.xsd" xmlns:mstns="http://tempuri.org/DBDemoDataSet.xsd" xmlns="http://tempuri.org/DBDemoDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DBDemoConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DBDemoConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WPF_College_Manager.Properties.Settings.GlobalReference.Default.DBDemoConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DistrictTableAdapter" GeneratorDataComponentClassName="DistrictTableAdapter" Name="District" UserDataComponentName="DistrictTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DBDemoConnectionString (Settings)" DbObjectName="DBDemo.dbo.District" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[District] WHERE (([Id] = @Original_Id) AND ([Location] = @Original_Location))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Location" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Location" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[District] ([Location]) VALUES (@Location);
SELECT Id, Location FROM District WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Location" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Location" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Location FROM dbo.District</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[District] SET [Location] = @Location WHERE (([Id] = @Original_Id) AND ([Location] = @Original_Location));
SELECT Id, Location FROM District WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Location" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Location" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Location" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Location" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="DBDemo.dbo.District" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Location" DataSetColumn="Location" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CollegeTableAdapter" GeneratorDataComponentClassName="CollegeTableAdapter" Name="College" UserDataComponentName="CollegeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DBDemoConnectionString (Settings)" DbObjectName="DBDemo.dbo.College" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[College] WHERE (([Id] = @Original_Id) AND ([CollegeName] = @Original_CollegeName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CollegeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CollegeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[College] ([CollegeName]) VALUES (@CollegeName);
SELECT Id, CollegeName FROM College WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CollegeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CollegeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, CollegeName FROM dbo.College</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[College] SET [CollegeName] = @CollegeName WHERE (([Id] = @Original_Id) AND ([CollegeName] = @Original_CollegeName));
SELECT Id, CollegeName FROM College WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CollegeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CollegeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CollegeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CollegeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="DBDemo.dbo.College" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="CollegeName" DataSetColumn="CollegeName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DistrictCollegeTableAdapter" GeneratorDataComponentClassName="DistrictCollegeTableAdapter" Name="DistrictCollege" UserDataComponentName="DistrictCollegeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DBDemoConnectionString (Settings)" DbObjectName="DBDemo.dbo.DistrictCollege" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[DistrictCollege] WHERE (([Id] = @Original_Id) AND ([DistrictId] = @Original_DistrictId) AND ([CollegeId] = @Original_CollegeId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DistrictId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DistrictId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CollegeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CollegeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DistrictCollege] ([DistrictId], [CollegeId]) VALUES (@DistrictId, @CollegeId);
SELECT Id, DistrictId, CollegeId FROM DistrictCollege WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DistrictId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DistrictId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CollegeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CollegeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, DistrictId, CollegeId FROM dbo.DistrictCollege</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[DistrictCollege] SET [DistrictId] = @DistrictId, [CollegeId] = @CollegeId WHERE (([Id] = @Original_Id) AND ([DistrictId] = @Original_DistrictId) AND ([CollegeId] = @Original_CollegeId));
SELECT Id, DistrictId, CollegeId FROM DistrictCollege WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DistrictId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DistrictId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CollegeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CollegeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DistrictId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DistrictId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CollegeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CollegeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="DBDemo.dbo.DistrictCollege" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="DistrictId" DataSetColumn="DistrictId" />
              <Mapping SourceColumn="CollegeId" DataSetColumn="CollegeId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DBDemoDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DBDemoDataSet" msprop:Generator_UserDSName="DBDemoDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="District" msprop:Generator_TableClassName="DistrictDataTable" msprop:Generator_TableVarName="tableDistrict" msprop:Generator_RowChangedName="DistrictRowChanged" msprop:Generator_TablePropName="District" msprop:Generator_RowDeletingName="DistrictRowDeleting" msprop:Generator_RowChangingName="DistrictRowChanging" msprop:Generator_RowEvHandlerName="DistrictRowChangeEventHandler" msprop:Generator_RowDeletedName="DistrictRowDeleted" msprop:Generator_RowClassName="DistrictRow" msprop:Generator_UserTableName="District" msprop:Generator_RowEvArgName="DistrictRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Location" msprop:Generator_ColumnVarNameInTable="columnLocation" msprop:Generator_ColumnPropNameInRow="Location" msprop:Generator_ColumnPropNameInTable="LocationColumn" msprop:Generator_UserColumnName="Location">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="College" msprop:Generator_TableClassName="CollegeDataTable" msprop:Generator_TableVarName="tableCollege" msprop:Generator_TablePropName="College" msprop:Generator_RowDeletingName="CollegeRowDeleting" msprop:Generator_RowChangingName="CollegeRowChanging" msprop:Generator_RowEvHandlerName="CollegeRowChangeEventHandler" msprop:Generator_RowDeletedName="CollegeRowDeleted" msprop:Generator_UserTableName="College" msprop:Generator_RowChangedName="CollegeRowChanged" msprop:Generator_RowEvArgName="CollegeRowChangeEvent" msprop:Generator_RowClassName="CollegeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="CollegeName" msprop:Generator_ColumnVarNameInTable="columnCollegeName" msprop:Generator_ColumnPropNameInRow="CollegeName" msprop:Generator_ColumnPropNameInTable="CollegeNameColumn" msprop:Generator_UserColumnName="CollegeName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DistrictCollege" msprop:Generator_TableClassName="DistrictCollegeDataTable" msprop:Generator_TableVarName="tableDistrictCollege" msprop:Generator_TablePropName="DistrictCollege" msprop:Generator_RowDeletingName="DistrictCollegeRowDeleting" msprop:Generator_RowChangingName="DistrictCollegeRowChanging" msprop:Generator_RowEvHandlerName="DistrictCollegeRowChangeEventHandler" msprop:Generator_RowDeletedName="DistrictCollegeRowDeleted" msprop:Generator_UserTableName="DistrictCollege" msprop:Generator_RowChangedName="DistrictCollegeRowChanged" msprop:Generator_RowEvArgName="DistrictCollegeRowChangeEvent" msprop:Generator_RowClassName="DistrictCollegeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="DistrictId" msprop:Generator_ColumnVarNameInTable="columnDistrictId" msprop:Generator_ColumnPropNameInRow="DistrictId" msprop:Generator_ColumnPropNameInTable="DistrictIdColumn" msprop:Generator_UserColumnName="DistrictId" type="xs:int" />
              <xs:element name="CollegeId" msprop:Generator_ColumnVarNameInTable="columnCollegeId" msprop:Generator_ColumnPropNameInRow="CollegeId" msprop:Generator_ColumnPropNameInTable="CollegeIdColumn" msprop:Generator_UserColumnName="CollegeId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:District" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="College_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:College" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="DistrictCollege_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DistrictCollege" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="CollegeFK" msdata:parent="College" msdata:child="DistrictCollege" msdata:parentkey="Id" msdata:childkey="CollegeId" msprop:Generator_UserChildTable="DistrictCollege" msprop:Generator_ChildPropName="GetDistrictCollegeRows" msprop:Generator_UserRelationName="CollegeFK" msprop:Generator_ParentPropName="CollegeRow" msprop:Generator_RelationVarName="relationCollegeFK" msprop:Generator_UserParentTable="College" />
      <msdata:Relationship name="DistrictFK" msdata:parent="District" msdata:child="DistrictCollege" msdata:parentkey="Id" msdata:childkey="DistrictId" msprop:Generator_UserChildTable="DistrictCollege" msprop:Generator_ChildPropName="GetDistrictCollegeRows" msprop:Generator_UserRelationName="DistrictFK" msprop:Generator_ParentPropName="DistrictRow" msprop:Generator_RelationVarName="relationDistrictFK" msprop:Generator_UserParentTable="District" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>